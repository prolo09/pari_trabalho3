<launch>

    <!--Bloco 1: argumentos do launch file.-->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="x_pos" default="-0.4"/>
    <arg name="y_pos" default="-1.5"/>
    <arg name="z_pos" default="0.0"/>

    <arg name="player_name" default="p_g5"/>
    <arg name="player_color" default="Orange"/>
    <arg name="base_color" default="DarkGrey"/>
    <arg name="scan_color" default="FlatBlack"/>


    <group ns="$(arg player_name)">

    <param name="tf_prefix" value="/$(arg player_name)" />

    <node pkg="robot_state_publisher" name="robot_state_publisher" type="robot_state_publisher" />
    <!--Bloco 3: Carregamento do xacro do robot para o parâmetro robot_description.-->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find p_g5_description)/urdf/p_g5.urdf.xacro player_name:=$(arg player_name) player_color:=$(arg player_color) base_color:=$(arg base_color) scan_color:=$(arg scan_color)" />

    <!--Bloco 4: Spawning (criação instantânea) do robô definido pela descrição anteriormente carregada para o robot_description, para uma posição específica da cena. -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg player_name) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

<!--        <rosparam file="$(find p_g5_description)/config/controller.yaml" command="load"/>-->

        <!--Load controller (from ROS)-->
<!--        <node name="differential_controller" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg player_name)"/>-->
<!--        <node name="differential_controller" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="differential_drive_controller"/>-->
<!--        <node name="differential_controller" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="differential_drive_controller joint_state_controller"/>-->

    </group>

</launch>